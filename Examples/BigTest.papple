/ This is a comment /

/ 
This
is
a multi-line
comment
/

/ Variable declaration should feel pretty familiar /
List[String] Names

Int Health = 50

/ Imports should feel pretty familiar /
Import ExampleExternalScript

/ We have lists
Names = ["Lani",
         "Lily",
         "Eleanor"]

/ And we have dictionaries
Dict People = ["Lani": 23,
              "Lily": 6]

/ Out is a built-in function to output to the CLI /
Out(Health)

/ Functions should feel pretty familiar /
Fnc Addition(int X, int Y) -> Int
    return X + Y


Fnc Read_File(String FilePath) -> Rtn
    File SomeFile = Open(FilePath)
    String Contents = SomeFile.Read_Lines()
    Out(Contents)


/ Conditionals
Fnc Is_Even(Number) -> Bln
    If Number % 2 == 0
        return True
    Else
        return False

/ Loops
Int Counter = 0
While
    Counter += 1
    Out("I'm a loop")
    If Counter == 3
        Break

/ Objects, I don't want them, but they'll be implemented in the interest of encapsulation, not inheritance, or polymorphism /
Obj Person
    func New(_Name, _Age) -> Rtn
        String Name =  _Name
        Integer Age = _Age

Person Jack
Person Jack.New("Jack", 21)

Out(Jack.Name)
Out(Jack.Age)

Jack.Age = 22

Out(Addition(5, 2))
Out(Subtraction(5, 2))